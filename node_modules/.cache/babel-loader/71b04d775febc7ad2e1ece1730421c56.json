{"ast":null,"code":"import _defineProperty from \"/Users/benwang/Desktop/NYCU_CS/112spring/cloud/final/Cloudnative_Final_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/benwang/Desktop/NYCU_CS/112spring/cloud/final/Cloudnative_Final_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/benwang/Desktop/NYCU_CS/112spring/cloud/final/Cloudnative_Final_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useRef } from \"react\";\nimport cx from \"clsx\";\nvar DEFAULT_CLASS = \"react-tabs__tab\";\nvar defaultProps = {\n  className: DEFAULT_CLASS,\n  disabledClassName: \"\".concat(DEFAULT_CLASS, \"--disabled\"),\n  focus: false,\n  id: null,\n  selected: false,\n  selectedClassName: \"\".concat(DEFAULT_CLASS, \"--selected\")\n};\nvar propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  disabled: PropTypes.bool,\n  disabledClassName: PropTypes.string,\n  focus: PropTypes.bool,\n  id: PropTypes.string,\n  selected: PropTypes.bool,\n  selectedClassName: PropTypes.string,\n  tabIndex: PropTypes.string,\n  tabRef: PropTypes.func\n} : {};\nvar Tab = function Tab(props) {\n  var _cx;\n  var nodeRef = useRef();\n  var _defaultProps$props = _objectSpread({}, defaultProps, props),\n    children = _defaultProps$props.children,\n    className = _defaultProps$props.className,\n    disabled = _defaultProps$props.disabled,\n    disabledClassName = _defaultProps$props.disabledClassName,\n    focus = _defaultProps$props.focus,\n    id = _defaultProps$props.id,\n    selected = _defaultProps$props.selected,\n    selectedClassName = _defaultProps$props.selectedClassName,\n    tabIndex = _defaultProps$props.tabIndex,\n    tabRef = _defaultProps$props.tabRef,\n    attributes = _objectWithoutProperties(_defaultProps$props, [\"children\", \"className\", \"disabled\", \"disabledClassName\", \"focus\", \"id\", \"selected\", \"selectedClassName\", \"tabIndex\", \"tabRef\"]);\n  useEffect(function () {\n    if (selected && focus) {\n      nodeRef.current.focus();\n    }\n  }, [selected, focus]);\n  return React.createElement(\"li\", Object.assign({}, attributes, {\n    className: cx(className, (_cx = {}, _defineProperty(_cx, selectedClassName, selected), _defineProperty(_cx, disabledClassName, disabled), _cx)),\n    ref: function ref(node) {\n      nodeRef.current = node;\n      if (tabRef) tabRef(node);\n    },\n    role: \"tab\",\n    id: \"tab\".concat(id),\n    \"aria-selected\": selected ? \"true\" : \"false\",\n    \"aria-disabled\": disabled ? \"true\" : \"false\",\n    \"aria-controls\": \"panel\".concat(id),\n    tabIndex: tabIndex || (selected ? \"0\" : null),\n    \"data-rttab\": true\n  }), children);\n};\nTab.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTab.tabsRole = \"Tab\";\nexport default Tab;","map":null,"metadata":{},"sourceType":"module"}