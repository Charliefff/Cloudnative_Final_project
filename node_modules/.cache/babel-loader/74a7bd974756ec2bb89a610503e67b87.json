{"ast":null,"code":"import _objectSpread from \"/Users/benwang/Desktop/NYCU_CS/112spring/cloud/final/Cloudnative_Final_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Children, cloneElement } from \"react\";\nimport { isTabPanel, isTab, isTabList } from \"./elementTypes\";\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\nexport function deepMap(children, callback) {\n  return Children.map(children, function (child) {\n    if (child === null) return null;\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n    if (child.props && child.props.children && typeof child.props.children === \"object\") {\n      return cloneElement(child, _objectSpread({}, child.props, {\n        children: deepMap(child.props.children, callback)\n      }));\n    }\n    return child;\n  });\n}\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, function (child) {\n    if (child === null) return;\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === \"object\") {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}